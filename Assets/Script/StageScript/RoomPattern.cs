using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class RoomPattern :MonoBehaviour
{
    public List<int[,]> patternList = new List<int[,]>();

    private void Start()
    {
        SetPattern();
    }

    public int[,] GetPattern(int roomNumber)
    {
        if (roomNumber == 1) // 시작방 / 보스방
        {
            return patternList[0];
        }
        if (roomNumber == 3)
        {
            return patternList[1];
        }
        if (roomNumber == 4) // 상점방
        {
            return patternList[2]; 
        }
        if (roomNumber == 5) // 황금방
        {
            return patternList[3];
        }
        if (roomNumber == 6) // 저주방
        {
            return patternList[4];
        }

        // 위의 방에 전부 포함되어있지않으면 "일반방"
        int rand = Random.Range(5, patternList.Count-3);
        return patternList[rand]; // 랜덤한 패턴을 리턴.
    }

    void SetPattern()
    {
        int[,] tmp;
        // 0 : 빈칸
        // 1 : 돌
        // 2 : 똥
        // 3 : 모닥불
        // 4 : 가시

        // 5 : 몬스터

        // 6 : 아이템 테이블 ( 상점용 )
        // 7 : 아이템 테이블 ( 황금방 )
        // 8 : 일반 상자 ( 열쇠 X)
        // 9 : 황금 상자 ( 열쇠 O ) 

        // 10 : 플레이어 생성 위치

        /* 시작방 */
        tmp = new int[7, 13] {
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }};
        patternList.Add(tmp);

        /* 보스방 */
        tmp = new int[7, 13] {
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }};
        patternList.Add(tmp);

        /* 상점방 */
        tmp = new int[7, 13] {
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }};
        patternList.Add(tmp);

        /* 황금방 */
        tmp = new int[7, 13] {
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }};
        patternList.Add(tmp);

        /* 저주방 */
        tmp = new int[7, 13] {
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }};
        patternList.Add(tmp);


        /* 일반방 패턴 */
        // 패턴 1번
        tmp = new int[7, 13] {
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }};
        patternList.Add(tmp);

        // 패턴 2번
        tmp = new int[7, 13]{
            {2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2 },
            {2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2 },
            {2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2 },
            {2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2 },
            {2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2 }};
        patternList.Add(tmp);

        // 패턴 3번
        tmp = new int[7, 13] {
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 1, 8, 1, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }};
        patternList.Add(tmp);

        // 패턴 4번
        tmp = new int[7, 13] {
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }};
        patternList.Add(tmp);

        // 패턴 5번
        tmp = new int[7, 13] {
            {1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1 },
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 },
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 },
            {0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0 },
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 },
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 },
            {1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1 }};
        patternList.Add(tmp);

        // 패턴 6번
        tmp = new int[7, 13] {
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }};
        patternList.Add(tmp);
    }
}
